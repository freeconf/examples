---
title: Prometheus
weight: 26
tags:
 - server
 - metrics
 - integration
 - gnmic
 - project idea
description: >
  Sending metrics to Prometheus
---

You have a few options for integrating your metrics with Prometheus.  You can use [gNMIc]({{< relref "../openconfig-gnmic" >}}) or `freeconf/example/fcprom` module. This document explores the later.

![Prometheus Car Tire Wear](images/car_tire_wear.png)

## Demonstrates:

* How to use export FreeCONF application metrics to Prometheus w/o coupling your application code to Prometheus
* How to use YANG extensions to improve to Prometheus results

## Details

The `fcprom.Bridge` walks thru all the local management interfaces and auto-discovers all metrics (i.e. `config false` in YANG) and makes them available to Prometheus.

![architecture Car Tire Wear](images/architecture.png)

Because YANG doesn't understand Prometheus' metrics types like `gauge` or `counter` or know how you want to flatten metrics in YANG `lists`, the `fcprom` module  uses YANG extensions to help you control the translation. YANG extensions are ignored by other systems.

### Defining some extensions

```YANG
[[ cp "metrics-extension.yang" ]]
```

### Using our extensions

```YANG
[[ cp "car.yang" ]]
```

## Running the example

{{< readfile file="/content/en/docs/Examples/common/get-example-source.md" >}}

## Setup and Run Prometheues

1.) [Download and install Prometheus](https://prometheus.io/docs/introduction/first_steps/)

2.) Start Prometheus with the example configuration here.

```bash
cd fcprom
prometheus --config.file=prometheus.yml
```

file: `prometheus.yml`
```yaml
[[ cp "prometheus.yml" ]]
```

## Running Application

```bash
cd fcprom/cmd
go run .
```

### Render Graph

Go to [http://localhost:9090/](http://localhost:9090/) and enter `car_tire_wear` as expression

## Using `fcprom` in your applications

```go
[[ cp "cmd/main.go" ]]
```

## Conclusion

### Comparison to gNMIc approach

![gnmic](images/gnmic-prom.png)

This has advantage of working with all gNMIc compliant devices. 

In general, FreeCONF is a library to build your own solutions, gNMIc is a utility to use in production as is. You can decide at any point which approach works for you without having to change your application code, just your deployment strategy.

### Using this example code

If you wanted to use the approach here as is, you could import `fcprom` into your application directly by calling `go get github.com/freeconf/example` but this example code may change without notice.  It's intention is to give you a starter project to customize as needed.

### Expanding on this example code

[Open a discussion](https://github.com/orgs/freeconf/discussions) about what you'd like to see or feel free to make an annoucement on what you built.

**Ideal architecture:**

![possible architecture](images/possible-architecture.png)

### Tips for extending:
* Consider adding more YANG extensions like `metrics:ignore` to skip data or `metrics:label` to override the default label.
